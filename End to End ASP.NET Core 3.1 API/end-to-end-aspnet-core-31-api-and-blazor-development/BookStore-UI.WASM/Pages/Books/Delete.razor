@page "/books/delete/{id}"
@attribute [Authorize(Roles = "Admin")]

@inject IBookRepository _repo
@inject NavigationManager _nav
@inject IFileUpload _fileUpload

<h3 class="card-title">View Book Details</h3>
@if (int.Parse(Id) < 1 || string.IsNullOrEmpty(Id))
{
    <ErrorMessage Message="Invalid Selection. Please try again"></ErrorMessage>
}
else if (Model == null)
{
    <LoadingMessage Message="Loading.."></LoadingMessage>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <table class="table table-responsive">
                <tr>
                    <td><strong>Title</strong></td>
                    <td>@Model.Title</td>
                </tr>
                <tr>
                    <td><strong>Author</strong></td>
                    <td>
                        @if (Model.Author != null)
                        {
                            <a href="/authors/view/@Model.AuthorId">@Model.Author.FirstName @Model.Author.LastName</a>
                        }
                        else
                        {
                            <span class="text-muted">No Author Recorded</span>
                        }
                    </td>
                </tr>
                <tr>
                    <td><strong>Summary</strong></td>
                    <td>@Model.Summary</td>
                </tr>
                <tr>
                    <td><strong>Published Year</strong></td>
                    <td>@Model.Year</td>
                </tr>
                <tr>
                    <td><strong>ISBN</strong></td>
                    <td>@Model.ISBN</td>
                </tr>
            </table>
        </div>

        <div class="col-md-4">
            <img src="uploads/@Model.Image" style="height:300px;width:300px" />
            <h3 class="text-center text-info">@string.Format("{0:C}", Model.Price)</h3>
        </div>
    </div>
}
<a @onclick="DeleteBook" class="btn btn-danger">
    <span class="oi oi-delete"></span>
    Delete Books
</a>
<a @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back to list
</a>
@code {
    [Parameter]
    public string Id { get; set; }
    Book Model = new Book();
    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _repo.Get(EndPoints.BooksEndPoint, id);
    }
    void BackToList()
    {
        _nav.NavigateTo("/books/");
    }
    async Task DeleteBook()
    {
        _fileUpload.RemoveFile(Model.Image);
        await _repo.Delete(EndPoints.BooksEndPoint, Model.Id);
        BackToList();
    }
}
